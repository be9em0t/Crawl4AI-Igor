# Project description
Documentation extraction crawler that uses crawl4ai and its LLM capability.

# Prerequisits
Crawl4ai has been set and available in the local pyenv. 
YAML files store information about different craml modes, like name, LLM model, Instruction etc.  

The documentation of crawl4ai is available here #fetch https://docs.crawl4ai.com/.

## Example Crawl Mode implementation guidelines
- Mode name is "Unity ShaderGraph"
- URL is "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Node-Library.html" 
- Capturing requirements:
  - Node library has topics, categories and nodes
  - we want to capture all nodes in the correct category structure
  - a category always contains nodes, otherwise it's just a topic
  - a topic can have zero or more categories 
  - if a topic has zero categories it itself is the category
Use this example as a stating point.
Graph nodes:
Artistic topic:
  - Adjustment category:
    - Channel Mixer node
    - Contast node
    - ...
  - Blend category
    - ...
  - Filter category
    - ...
  - Mask category
    - ...
  - Normal category
    - ...
  - Utility category
    - ...
Channel topic = Channel category:
  - Combine Channels
  - Split Channels
  - Reorder Channels
  - Flip Channels
Custom Render Texture topic = Custom Render Texture category:
  - ... 
Input topic = Input category:
  - ... 
Math topic = Math category:
  - ...
Procedural topic = Procedural category:
  - ...
Utility topic = Utility category:
  - ...
UV topic = UV category:
  - ...

## Running the commands
Basic run:
python3 crawl_cat.py <yaml file>
Help:
python3 crawl_cat.py --help